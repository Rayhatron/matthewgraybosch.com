#!/usr/bin/env bash
set -e # halt script on error

# Let's build the site.
if [[ "$IS_TRAVIS" ]]
  then bundle exec jekyll build --config _config.yml
  else bundle exec jekyll build --config _config.yml _config.dev.yml
fi

# We need to resize and compress images for display.
# This part based on "Efficient Image Resizing With ImageMagick" by Dave Newton
# https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/
echo "Image Processing: START..."
export INPUT_PATH=_assets/images/fullsize/
export OUTPUT_WIDTH=700
export OUTPUT_PATH=_assets/images/resized/
for img in ${INPUT_PATH}/*
do
  echo "Processing image: ${img}"
  mogrify -path "${OUTPUT_PATH}/${img}" -filter Triangle -define filter:support=2 -thumbnail $OUTPUT_WIDTH -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 -define jpeg:fancy-upsampling=off -define png:compression-filter=5 -define png:compression-level=9 -define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none -colorspace sRGB "${img}"
done
echo "Image Processing: END..."

# Make target directories for images.
mkdir -p _site/assets/images/fullsize/
mkdir -p _site/assets/images/resized/

# Gotta copy over images.
rsync -avzh _assets/images/fullsize/ _site/assets/images/fullsize/
rsync -avzh _assets/images/resized/ _site/assets/images/resized/

# Now let's check the pages.
bundle exec htmlproofer ./_site --allow-hash-href --disable-external